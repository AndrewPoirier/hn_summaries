<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>HN Summaries</title><link>http://andrewpoirier.github.io/hn_summarizer</link><description>The top HN articles everyday - summarized</description><lastBuildDate>Tue, 05 Nov 2024 06:12:14 -0000</lastBuildDate><item><title>1. Scientists glue two proteins together, driving cancer cells to self-destruct</title><link>https://med.stanford.edu/news/all-news/2024/10/protein-cancer.html</link><description>
&lt;![CDATA[
&lt;p&gt;625 points points by Jerry2 on 2024-11-04T00:42:58 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42037386'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;There's a decent amount of cynicism in the comments, which I understand. I think this is a really cool and novel study, though.Historically, cancer was treated with therapies that are toxic to all cells, relying on the fact that cancer cells divide quickly and are unable to handle stress as well as normal cells (chemotherapy, radiation).The last couple of decades we've seen many targeted cancer therapies. These drugs generally inhibit the activity of a specific protein that lets the cancer cells grow (e.g. EGFR inhibitors) or prevents the immune system from killing the cancer cells (e.g. PDL1 inhibitors).This mechanism is way more interesting. The gene BCL6 is usually turned on in immune cells when they are mutating to recognize foreign invaders. This process involves lots of DNA damage and stress, but BCL6 stops the cells from dying and is therefore important for normal immune function. Unfortunately, this makes BCL6 a gene that is often co-opted in cancer cells to help them survive.The method cleverly exploits the oncogenic function of BCL6 not by inhibiting it, but by turning it into a guide, enabling the delivery of activating machinery to the targets of BCL6 and reversing the inhibitory effects on cell death.The whole field of targeted degraders, molecular glues, and heterobifunctional molecules is a growing area of interest in cancer research.&lt;/li&gt;&lt;li&gt;All of this stuff is promising, and I hope the diagnostic side catches up as well.Just went to a funeral this weekend for a 40 year old who died of breast cancer 4 weeks after diagnosis at her first annual mammogram.A lot of skeptical people under 30 here haven't lived through regularly various cancer diagnoses in their friends &amp; family group that your late 30s/early 40s starts to bring.I don't have the data on it, but anecdotally I notice that women's cancers seem to strike 5-10 years earlier than mens even if they can be caught early &amp; treated well.. Though apparently men have overall worse cancer survival rates.&lt;/li&gt;&lt;li&gt;Same as mountainriver's comment. I really find strange how I've been reading news lines over the past years about great advancements in many incurable and chronic diseases (like Alzheimer's, diabetes, and cancers) yet after all that time people's treatment is not going any better. I'm not sure whether scientific journalism somehow delivered some unintended messages to me, or we're just supposed to experience these great advancements after couple of decades from the announcement.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:07:24 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42037386</guid></item><item><title>2. New York Times Tech Guild goes on strike</title><link>https://www.washingtonpost.com/style/media/2024/11/04/new-york-times-tech-strike-walkout/</link><description>
&lt;![CDATA[
&lt;p&gt;683 points points by ChrisArchitect on 2024-11-04T12:08:30 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;None&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42040795'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;Here is context on the strike, how long it's been brewing, and more that I happened to read yesterday:https://www.thenation.com/article/archive/the-new-york-times...&lt;/li&gt;&lt;li&gt;&gt; The two sides negotiated until late Sunday. The sticking points in recent days were over whether they could get a “just cause” provision in their contract, which means workers can be terminated only for misconduct or another such reason; pay increases and pay equity; and return-to-office policies.This seems like a LOT of issues that still need to be hammered out. It would be one thing if they were disagreeing about a number, but it sounds like the terms keep changing and nobody agrees on the nature of the work itself. It's not even clear that there's a preliminary contract ready for the NYTimes to sign.Striking during election week is kind of a crappy move to pull. But if this is just attention seeking without a serious contract, it seems egregiously risky on behalf of the union members too: there's not a clear button the Times can push on behalf of the union to end the strike immediately. The Times would either have to sign a blank check to the union now, or the union would have to agree to an IOU in exchange for a bunch of temporary concessions.&lt;/li&gt;&lt;li&gt;Gift link: https://www.nytimes.com/2024/11/04/business/media/new-york-t...https://archive.ph/f9gP0&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:07:34 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42040795</guid></item><item><title>3. A change of heart regarding employee metrics</title><link>http://rachelbythebay.com/w/2024/11/03/metrics/</link><description>
&lt;![CDATA[
&lt;p&gt;570 points points by zdw on 2024-11-04T05:06:42 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;This week's prompt is a change of heart on employee metrics. Use the weekly Newsquiz to test your knowledge of stories you saw on CNN.com. Today's prompt: Share your thoughts on a story you saw in CNN. com's newsquiz.  The weekly News Quiz will be held on November 3, 2024 at 11:30 a.m. ET (13:30 p.m., November 4, 2014 at 9:30 A.M. ET)&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42038653'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;&gt;&gt; [Why not build programmer performance measurement tooling?] It's the job of a manager to know what their reports are up to, and whether they're doing a good job of it, and are generally effective. If they can't do that, then they themselves are ineffective, and that is the sort of thing that is the responsibility of THEIR manager, and so on up the line.Agreed wholeheartedly, but for slightly different reasons. To wit, laziness and Goodhart's law. [0]In the absence of infinite time, automation will excuse a lack of manager curiosity, as other competing tasks absorb the freed time.Consequently, most managers with automated dashboards showing performance metrics won't use those dashboards... plus all the person-to-person work they were previously doing. They'll only use those dashboards.Which then slowly but inexorably turns your employees into dashboard-optimization drones via operant conditioning.Helping a colleague doesn't show up on the dashboards? Fuck that. Digging into what looks like a security vulnerability isn't on the sprint board? Fuck that.Which is incredibly corrosive to quality, creative system design.And then, because this is the work reality you've created, the creative folks you really want working there bail for greener pastures, and you're left with bottom of the barrel talent and retention problems.[0] https://en.m.wikipedia.org/wiki/Goodhart's_law&lt;/li&gt;&lt;li&gt;I worked on an internal platform for a large engineering org and was responsible for choosing what features we put in.We had the technical means to track everything from commits to reviews, jiras, deploys, etc. Some of our most celebrated and impactful features were reporting on Accelerate metrics and related. E.g. deploy frequency, size of changes, duration of stages in the dev cycle and such.I set a very inflexible red line: we don’t expose data more granular than at team level. Ever. No excuse.Quite a few line managers would come to me asking for “personal metrics”, and even engineers in the team were super interested in building that (“with all this data we could…”).My argument was that these metrics are toxic and invite misuse. A second factor was that this misuse would generate mistrust from engs against the platform and damage adoption.Instrumenting an organization thought of as a system is fine. You want to see where are bottlenecks, you want to have measurable targets for how technical work is done and how it correlates to business goals/KPIs.You want to offer teams metrics of their delivery my process so they can take the info and implement improvements whenever they see fit, and have a data driven conversation with the business (e.g. about the right setting for the carefulness knob)But teams are the minimum unit of ownership, we stop the instrumentation there. Sure, a team’s performance ultimately links to individuals, but that is the manager’s job to figure out.Interestingly:* only line managers asked for this info, nobody in a director/vp/cxo role
* the most annoyed by me saying no were engineers in the team who wanted to do these features&lt;/li&gt;&lt;li&gt;there's a scene from the tv show "suits" that has always stuck with me:the show is set in a law firm, and in this particular episode they needed to lay off some of their associates. a young, newly-promoted lawyer was tasked with drawing up a list of the associates and marking the ones who she felt should get the axe, based on their performance. so she comes up with some metrics, goes through the associates' work, and ranks them based on the resultant numbers, saying that the bottom few could be let go.there is one employee, brian, who ends up near the bottom of the list. a more senior person takes her aside and asks why she recommended brian be laid off, so she brings out the metrics and rankings and points to him near the bottom. the senior person asks "okay, so who are the top associates in your list? can you point them out on the seating chart?". turns out, the top five associates were all brian's neighbours, and the reason was that he was really good at helping people when they were stuck with something. but of course that affected his own individual contributor numbers, and there were no metrics for "helped someone else out but didn't get credit for it".&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:07:44 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42038653</guid></item><item><title>4. Hertz-dev, the first open-source base model for conversational audio</title><link>https://si.inc/hertz-dev/</link><description>
&lt;![CDATA[
&lt;p&gt;280 points points by mnk47 on 2024-11-03T23:30:48 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;Introducing hertz-dev, the first open-source base model for conversational audio generation. A convolutional audio autoencoder that takes mono, 16kHz speech and transforms it into a 8 Hz latent representation at about 1kbps bitrate. The model has a context of 8192 sampled latent representations (17 minutes) and predicts the next encoded audio frame. We're excited to announce that we're open-sourcing current checkpoints of our full-duplex, audio-only transformer base model.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42036995'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;This is really cool. FWIW, existing open-source TTS engines are really bad in comparison to what you have here: I know this is voice-to-voice, but I think there'd be a lot of appetite to get this to also be multimodal and accept text (essentially making it a really good TTS model, in addition to a great voice-to-voice model).I suppose someone could hack their way around the problem by finetuning it to essentially replay Piper (or whatever) output, only with more natural prosody and intonation. And then have the text LLM pipe to Piper, and Piper pipe to Hertz-dev. But it would be pretty useful to have it accept text natively!&lt;/li&gt;&lt;li&gt;They say Hertz is first of its kind but Moshi is another duplex audio model from earlier this year that seems to perform similarly (and it runs on a MacBook):
https://github.com/kyutai-labs/moshi&lt;/li&gt;&lt;li&gt;Tesla’s approach to pure vision-based autonomous driving—temporarily setting aside lidar and other sensors—seems designed to make this technology more accessible and scalable. By focusing on a vision-only model, they can accelerate adoption and gather large datasets for quicker iterations. Once the vision-based system reaches a mature stage, I imagine Tesla might reintegrate additional sensor data, like lidar or radar, to refine their autonomous driving suite, making it even more robust and closer to perfection.Additionally, I’ve been exploring an idea about voice interaction systems. Currently, most voice interactions are processed by converting voice input into text, generating a text-based response, and then turning this text back into audio. But what if we could train the system to respond directly in voice, without involving text at all? If developed to maturity, this model could produce responses that feel more natural and spontaneous, possibly diverging from traditional text-to-speech outputs. Natural speech has unique syntax and rhythm, not to mention dialect and tone variations, which could make a purely voice-trained system fascinating and more human-like.Could you let me know if your current voice interaction model follows the standard speech-to-text-to-speech process, or if there is exploration in voice-to-voice processing?&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:07:54 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42036995</guid></item><item><title>5. Alonzo Church: Architect of computer intelligence</title><link>https://onepercentrule.substack.com/p/alonzo-church-the-forgotten-architect</link><description>
&lt;![CDATA[
&lt;p&gt;274 points points by drcwpl on 2024-11-04T14:51:10 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42042025'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;A historical tidbit which I loved in Paradigms of Artificial Intelligence Programming (available in PDF and EPUB here - https://github.com/norvig/paip-lisp):&gt; The name lambda comes from the mathematician Alonzo Church's notation for functions (Church 1941). Lisp usually prefers expressive names over terse Greek letters, but lambda is an exception. A better name would be make-function. Lambda derives from the notation in Russell and Whitehead's Principia Mathematica, which used a caret over bound variables: x̂(x + x). Church wanted a one-dimensional string, so he moved the caret in front: ^x(x + x). The caret looked funny with nothing below it, so Church switched to the closest thing, an uppercase lambda, Λx(x + x) . The Λ was easily confused with other symbols, so eventually the lowercase lambda was substituted: λx(x + x). John McCarthy was a student of Church's at Princeton, so when McCarthy invented Lisp in 1958, he adopted the lambda notation. There were no Greek letters on the keypunches of that era, so McCarthy used (lambda (x) (+ x x)), and it has survived to this day.So, yes, on the topic of this post - Church pops up in loads of Lisp retrospectives. Maybe he's "forgotten" by people with very little engagement in the history of computing.&lt;/li&gt;&lt;li&gt;"Church’s lambda calculus and the Turing machine are equally powerful but differ in the fact that Turing machines use mutable state. To this day, there is a rift between functional and imperative programming languages, because of the separation of Church and state."[I have known the above quote forever, but I can't find an original source]edit: might be from Guy Steele: "And some people prefer not to commingle the functional, lambda-calculus part of a
language with the parts that do side effects. It seems they believe in the separation of Church and state"&lt;/li&gt;&lt;li&gt;If you want to read something incredible about Church, read Rota's reminiscence. It's the first section of https://www34.homepage.villanova.edu/robert.jantzen/princeto....Related:Alonzo Church, 92, Theorist of the Limits of Mathematics(1995) - https://news.ycombinator.com/item?id=12240815 - Aug 2016 (1 comment)Gian-Carlo Rota on Alonzo Church (2008) - https://news.ycombinator.com/item?id=9073466 - Feb 2015 (2 comments)&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:08:04 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42042025</guid></item><item><title>6. What should a logo for NeXT look like? (1986)</title><link>https://www.paulrand.design/work/NeXT-Computers.html</link><description>
&lt;![CDATA[
&lt;p&gt;222 points points by themantra514 on 2024-11-04T15:26:32 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42042382'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;The logo got a second lease of life after NeXT was acquired by Apple. A bit of British political trivia: Dominic Cummings, the campaign director of the Vote Leave organisation in the 2016 Brexit referendum, nicked the NeXT logo and made a few tweaks for Vote Leave:&gt; The logo was stolen from Steve Jobs. We couldn’t afford to hire a top agency and they wouldn’t have worked with us anyway. So I thought about Jobs’ advice on simplicity and ‘the best artists steal’ (see above!) and did some google searches. Surely there’s something he did with manic determination I could steal? After he left Apple in the 1980s, for his new company he got one of the top designers in the world to do a logo. I looked at it and thought, ‘good enough for Steve good enough for us, we can put a hole in the top so it looks like a ballot box’. Total cost: almost nothing. I made a lot of decisions like this because the savings in time and money were far greater than the marginal improvements of spending more time and money on them (if this would even bring an improvement).https://dominiccummings.substack.com/i/117842715/where-did-t...&lt;/li&gt;&lt;li&gt;I always go back to the Saul Bass presentation to AT&amp;T over their 1970 logo redesign. He takes 30 minutes to explain the thought process and sell this design hard. By the end you're convinced it's the natural thing to do. I'm sure every executive in the room felt the same way.https://www.youtube.com/watch?v=xKu2de0yCJI(Bass would return a mere 13 years later to do the AT&amp;T "Death Star" logo after the breakup)&lt;/li&gt;&lt;li&gt;&gt; Set in all capitals, the word NEXT is sometimes confused with EXIT possibly because the EXT grouping is so dominant. A combination of capitals and lower case letters alleviates this problem.Huh. Never knew why the 'e' was lowercased until now. I thought it was just "style".&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:08:14 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42042382</guid></item><item><title>7. An embarrassingly simple approach to recover unlearned knowledge for LLMs</title><link>https://arxiv.org/abs/2410.16454</link><description>
&lt;![CDATA[
&lt;p&gt;248 points points by PaulHoule on 2024-11-04T02:52:14 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;Large language models (LLMs) have shown remarkable proficiency in generating text, benefiting from extensive training on vast textual corpora. Machine unlearning has been introduced as a viable solution to remove the influence of such problematic content without the need for costly and time-consuming retraining. This process aims to erase specific knowledge from LLMs while preserving as much model utility as possible. We find that for unlearning methods with utility constraints, the unlearned model retains an average of 21\% of the intended forgotten knowledge in full precision, which significantly increases to 83\% after 4-bit quantization.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42037982'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;In short: their finding is that quantizing a model undoes various “unlearning” methods. An unlearning method is a specific update to model weights that make it forget specific facts. These are often meant to satisfy copyright claims, although I don’t know if these are ever used in practice.I feel that this needs a good threat model analysis. Like, you possess an fp32 model, which someone has fine-tuned to forget some facts, which you can then quantize to recover those facts. When would this lead to a dangerous situation?&lt;/li&gt;&lt;li&gt;I think quantization is a red herring. If there's any way to undo the unlearning, this means that the knowledge is still in the weights -- that's basic information theory. I'm sure there are a million other ways to recover the lost knowledge that don't involve quantization.&lt;/li&gt;&lt;li&gt;It's like asking baby to unlearn something "bad" it learned. Pretty much guaranteed the knowledge will be reinforced rather than forgotten.Whenever I hear about AI craze, I remind myself of the 3D printers craze from 10-15 years ago. "Death blow to factories", "We will print our own cars", "We will print our own food". I imagine LLM AI will follow the same fate - yes, but not really.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:08:24 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42037982</guid></item><item><title>8. Show HN: Tinder, but to decide what to eat</title><link>https://whatdinner.com/</link><description>
&lt;![CDATA[
&lt;p&gt;242 points points by kiru_io on 2024-11-03T20:56:05 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42036041'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;I work for a startup that provides meal plans. This and competing apps let you set requirements (kcal, intolerances, etc), also includes breakfast, etc. These apps are aimed at people that want to eat healthy and are looking for some inspiration.You seem to go with user generated content, so the inspiration part is out, the health part is out, but you focus very much on the problem of forming a choice just for diner.I do think this way your audience is huge, but the added value is a bit limited.So you can decide to slowly move towards those other apps. Or, perhaps move away from it somehow. Maybe it's a generic tool to help you grow and maitain your relationship with your partner by providing tools that deal with each other preferences and choices within that relationship. Both practical and more emotional. But I guess I'm now more brainstorming :).You can also just keep it small and have fun tinkering in a way that works for you. I read a comment:&gt; There are servers needed for the app to work, right? So I guess subscription makes sense?Perhaps you don't really need servers. Keep the data just local on the app. Let people use regular chat for getting to a compromise. That way you could ask a one time fee of $5. It could be a (very) small passive income that doesn't require you much work, no moderation, no security risks.Either way, good luck!&lt;/li&gt;&lt;li&gt;I like the idea and face the same challenge. I’ve just installed it and, from my first impressions, it seemed a bit basic. Here’s what I expected:Hundreds of recipes that I could swipe left and right through, allowing me to build up a typical selection of what I would usually eat. Instead, I was presented with only three choices, none of which I would generally consider.A simple way to send the code to my wife — via imessage, Telegram, etc. Instead, I had to tell her in person! :)This presents the perfect opportunity to delve into shopping lists where the wife wants something healthy, and the I crave a burger. I can think of quite a few features you could add if the app develops further.Also, like the comment below about having a stranger over for dinner (not for dating purposes), it could involve a couple or someone visiting a new country who would appreciate a local showing them around and perhaps covering the dinner cost. Once the app learns your food preferences and interests, that could be quite exciting! There might already be an app that does this; I’m not sure.  Swiping left and right on both food likes / dislikes and also general interests.&lt;/li&gt;&lt;li&gt;Why not both? See what others around you want to eat, swipe together, meet up with a stranger in a restaurant and eat together. Maybe get to know them, maybe not.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:08:34 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42036041</guid></item><item><title>9. Writing secure Go code</title><link>https://jarosz.dev/article/writing-secure-go-code/</link><description>
&lt;![CDATA[
&lt;p&gt;274 points points by gus_leonel on 2024-11-04T17:34:28 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;Security in Go code can be achieved by following a few specific practices. These practices will lead to writing robust, secure and performant code. The best way to stay informed about Go security announcements is to subscribe to the [email protected] list. The go vet command without arguments runs the tool with all options allowed by default. The tool scans the source code and reports potential issues. It also enforces Go language styling and suggests corrections with running staticcheck in the CI pipeline, we can install the code locally as a standalone binary.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42043939'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;As the article also mentions: instead of checking if your program has a dependency on something that contains vulnerabilities, govulncheck checks if vulnerable code is actually reached. I find that so awesome. (And I know, someone is going to point out that hipster language foo does this too and better — it’s not the norm).&lt;/li&gt;&lt;li&gt;Don’t forget about capslock: https://github.com/google/capslockAssess your 3P modules for dangerous capabilities&lt;/li&gt;&lt;li&gt;Great tips in here - I was not aware of `go vet` nor `go test -race`.FWIW, while go is not memory safe, I do find that it's much easier to be safe in go than it is in other languages. Its verboseness lends to a very clear understanding of what's happening in any given function. I absolutely hated this at the start, but now ~3 years into maintaining a go codebase, I find it quite nice both for debugging as well as editing old code. I know exactly what each function does, and what the structure of data is in any given context.Another interesting side effect is that AI tools seem to work amazingly well with golang, given how context is often local to the function.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:08:44 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42043939</guid></item><item><title>10. Quincy Jones has died</title><link>https://apnews.com/article/quincy-jones-dead-a9e31c7e39c448d8971519f47a22dd21</link><description>
&lt;![CDATA[
&lt;p&gt;362 points points by gfortaine on 2024-11-04T08:13:45 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42039569'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;As a jazz aficionado, I am very familiar with Quincy Jones’ immense contributions to music.  I am a very big fan of the albums he produced, such as “The Dude” and “Back on the Block.”What is less well known is Quincy Jones’ involvement with computing.  At one point he was on the advisory committee for the ACM Computers in Entertainment Magazine (https://dl.acm.org/doi/10.1145/973801.973803), and if I remember correctly, he was on the board of former Xerox PARC researcher Alan Kay’s Viewpoints Research Institute.  I’ve been wanting to know more about Quincy Jones’ involvement with computing since I first learned about this a few years ago.Rest in peace.  Quincy Jones is a legendary figure.&lt;/li&gt;&lt;li&gt;When I was four, I got a record player for Christmas. This one:https://djcj.website/wp-content/uploads/2019/12/denim_turnta...My mom had a copy of Ray Charles' greatest hits. My favorite song was One Mint Julep. Quincy Jones did the arrangement. You can see by the wear on this record how much I listened to that song, as well as "Unchain My Heart" and "Hit the Road Jack."https://djcj.website/wp-content/uploads/2020/05/one-mint-jul...So much great music. And when you watch interviews with other musicians with whom he crossed paths, they all talk about what an uplifting and positive influence he had on their lives.Here's a interview with his longtime collaborator Tom Bähler. He has some really beautiful stories about his experiences with Quincy.https://youtu.be/yIkP_XuIDeY?t=5197And when he got together with Rod Temperton, the magic was next-level.https://www.facebook.com/QuincyJones/posts/ill-never-forget-...&lt;/li&gt;&lt;li&gt;*From a strictly musical perspective, what have you done that you’re most proud of?*That anything I can feel, I can notate musically. Not many people can do that. I can make a band play like a singer sings. That’s what arranging is, and it’s a great gift. I wouldn’t trade it for shit.https://www.vulture.com/article/quincy-jones-in-conversation...&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:08:54 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42039569</guid></item><item><title>11. Diagram as Code</title><link>https://diagrams.mingrammer.com/</link><description>
&lt;![CDATA[
&lt;p&gt;339 points points by ulrischa on 2024-11-04T18:46:42 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;Diagrams lets you draw the cloud system architecture in Python code. It was born for prototyping a new system architecture without any design tools. Diagram as Code allows you to track the architecture diagram changes in any version control system. It currently supports main major providers including: AWS, Azure, GCP, Kubernetes, Alibaba Cloud, Oracle Cloud etc... It also supports On-Premise nodes, SaaS and major Programming frameworks and languages.NOTE: It does not control any actual cloud resources nor does it generate cloud formation or terraform code.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42044771'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;I quite like PlantUML, even for add a simple diagram to an email discussion which has become to long.My colleagues however like the idea but don't want to learn the syntax.So I build a simple add-on to our internal mail system that, when invoked, scrapes the email and runs it against a fine tuned Llama 3.1 8b model which then generates a PlantUML diagram from natural language.If the input isn't of an appropriate nature to be converted to a diagram or vague it will not do this.What I have found is that now at least 50% of the team have used this feature once since go-live.In many cases not all though, the immediately returned image is not 100% correct but there is a nice integrated way to edit and render which is now causing many to get familiar with the syntax whereas before they couldn't be bothered.Overall it's been a nice, relatively cheap way to get GenAI to actually help us at work.&lt;/li&gt;&lt;li&gt;This project (and others like it) are graphviz wrappers - they do some really cool stuff to emit styled .dot files that look better than writing and rendering raw gv.#Allowing specification in Python offers very little advantage - in theory you think, hey, I've got hi-lighting, autocompletion, and so on from an IDE. It'll play nice in VCS. Maybe I can interrogate orchestration layers and so on to produce dynamic views.In practice diagrams are produced by folks who might not want to use or learn python [or golang, their other implementation]. Instead a lean purpose-build DSL, maybe even an extension of graphviz dot, is easier and more portable for some audiences to pick up.
Secondly, we can't JUST graft a DSL front-end onto these tools because the styled components are baked into the project.My personal experience with layout engines is that they work OK for very small architecture diagrams, but become ugly or inelegant at useful scales.I (and the teams I've worked with) settle on draw.io, either the desktop app, or committed as part of confluence, as the best way to describe intent/design - and rendering graphviz with a style up top for anything dynamic.Would welcome seeing a true extension to the dot language that can unlock reasoning engines (like to do threat modeling) and render-time styling.&lt;/li&gt;&lt;li&gt;I personally have been using mermaid for sequence diagrams and flow charts: https://mermaid.js.org/DaC seems nicer for infra&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:09:04 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42044771</guid></item><item><title>12. DB48X: High Performance Scientific Calculator, Reinvented</title><link>http://48calc.org/</link><description>
&lt;![CDATA[
&lt;p&gt;153 points points by qwezxcrty on 2024-11-04T17:19:34 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42043747'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;The 48G was a really good calculator, but only after loading additional software. The HP50g that came much later is better in every respect, except possibly for the smaller "ENTER" key (and people used to 48G will have to change some habits and possibly redefine some keys…).Incidentally, many young people (yes, I know how that sounds) do not know how useful a good engineering calculator can be and do not want to learn how to use one. They are missing out. Yes, there is a steep learning curve, but the rewards are significant if you do any amount of calculation in your hobby or work. No, this is not replaced by typing "python" (or "bc", or anything else, really) at your command prompt.Also incidentally, the development of good engineering calculators pretty much died. HP Prime is largely a school-pleasing toy, HP would down their calculator division a long time ago, and nobody else produces anything good. It's kind of like with gyms: what you get is what the market wants, and since the market doesn't know much, you get gyms full of useless exercise machines, because that's what people think a good gym should have. Similarly with calculators: you get stupid "modern" graphing calculators which are useless for actual work (it takes forever to use them to calculate useful things, and graphing is much better done on a computer), but they look great and sell well.I admire the project, although I would probably have taken a different path (emulation) to get the biggest effect with the smallest possible effort :-)I wish there was a good HP50G emulator for iOS — there used to be one, but it was abandoned (contact me if you want to develop it and would like to get the source code, it was under the GPL and I got it from the author).&lt;/li&gt;&lt;li&gt;I am a fan of the HP Primehttps://hpcalcs.com/product/hp-prime-graphing-calculator/But I use it in algebraic instead of RPN mode.  I’ve got a 49g and a 50-something too.People say it is pricey but I managed to get one discounted that was intended for the Latin American market.  So is the thing that software is supposed to run on.&lt;/li&gt;&lt;li&gt;I still have a HP48GX in perfect condition and love it. One of my first programs was to calculate how much „slower“ my time is running when I drive a car or fly in a plane compared to someone standing still on the sidewalk.I still find it much more comfortable having a real calculator… call me old fashioned.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:09:14 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42043747</guid></item><item><title>13. A Hamiltonian Circuit for Rubik's Cube</title><link>https://bruce.cubing.net/ham333/rubikhamiltonexplanation.html</link><description>
&lt;![CDATA[
&lt;p&gt;101 points points by jcalx on 2024-10-31T21:56:35 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42011976'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;You can solve a (legally scrambled) Rubik's Cube with no knowledge of its initial state, as long as someone stops you when you've done it.You also need several billion years to do this, so it's not recommended for beginner solvers.&lt;/li&gt;&lt;li&gt;This is neat, though it's from 2012 or maybe earlier.I wonder if there is a single not-too-long rotation sequence that generates the whole cube group.  That is, a sequence XYZ that you can perform repeatedly and have that bring you through every cube state.  If not, maybe there is some other very simple algorithm that traverses all the states, instead of a zip file that uncompresses to 200MB.&lt;/li&gt;&lt;li&gt;Bit of a meta note: grown adult here who never got into cubing earlier in life. Recently picked one up as some non-screen entertainment for some long haul flights and train travel. Highly recommend.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:09:24 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42011976</guid></item><item><title>14. Is the Q source the origin of the Gospels?</title><link>https://www.thecollector.com/q-source-origin-gospels/</link><description>
&lt;![CDATA[
&lt;p&gt;155 points points by Tomte on 2024-11-04T11:55:30 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42040706'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;The Q hypothesis has issues. For such an important document or source, nothing is known about it. Its existence is not mentioned or hinted at in external sources. No trace of it has been found.In addition, the synoptic puzzle can be laid in a self-consistent and "path-of-least-resistance way" by looking at e.g. author motives: Matthew writing for the Jewish community in Jerusalem; Mark describing Peter's preaching in Rome; Luke writing as a Greek doctor for a gentile audience (and John writing much later, clarifying and responding to the first heresies that had popped up).So the Q hypothesis, aside from being a purely theoretical construction based on internal evidence, is not necessary either.See e.g. "Case Against Q: Studies in Markan Priority and the Synoptic Problem" by Goodacre.&lt;/li&gt;&lt;li&gt;Kind of odd to see this turning up here:  this theory isn't new and in fact is one of the couple most accepted theories about the origin of the gospels.  It was proposed more than a century ago, and this article doesn't say anything particularly new or interesting about it.  Honestly, the Wikipedia page is probably better:https://en.wikipedia.org/wiki/Q_source&lt;/li&gt;&lt;li&gt;&gt; The Farrer hypothesis proposes that Matthew used Mark as a source, but Luke used both Mark and Matthew as a source. This approach is simple and negates the need for a Q source altogether.&gt; A weakness of the Q source hypothesis is the absence of any textual evidence despite extensive scholarly efforts to find it. The entire hypothesis is based on statistical and literary analysis and inference. It adds complexity to the synoptic problem by introducing an additional layer of tradition, transmission, and composition, which may not be warranted given the available evidence (or rather lack thereof).Wouldn't Occam's Razor suggest that the Farrer hypothesis is most likely true?Edit: Or, maybe I should just continue reading to the end first:&gt; On the other hand, it would also make for a more complex explanation than other scholars have proposed, violating the principle of Occam’s Razor. Alternatively, Mark could have been the source for Matthew, and Matthew for Luke, which is a much simpler explanation than the Q hypothesis.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:09:34 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42040706</guid></item><item><title>15. PacCam: Pac-Man controlled with your face</title><link>https://eieio.games/paccam/</link><description>
&lt;![CDATA[
&lt;p&gt;59 points points by bblcla on 2024-11-01T16:37:16 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42018740'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;Hello again Nolen, fun game! Tried the single player mode on mobile, works well and fast :)1. Why is there no "map"? I was confused as I expected a fixed grid for pacman to be able to navigate in2. Why are the bots so much faster? It is difficult enough to track my own character to ensure its moving in the right direction, so the fast bots really sneak up on me and there's no way to avoid them&lt;/li&gt;&lt;li&gt;Love it! I think we'd get along - https://github.com/everythingishacked/CheekyKeys&lt;/li&gt;&lt;li&gt;I wish there was some way to calibrate this.My webcam sits low on my desk (it's built into a laptop screen that is one of many) so it was almost impossible to look up without it saying "too far" and I had to curl around myself and hunch to get it to maybe register as looking down.I tried moving the display between monitors and that didn't help much.If I could calibrate what "straight ahead" is then I could maybe play the game.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:09:44 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42018740</guid></item><item><title>16. USFS Decision to Halt Prescribed Burns in California is History Repeating</title><link>https://cepr.net/us-forest-service-decision-to-halt-prescribed-burns-in-california-is-history-repeating/</link><description>
&lt;![CDATA[
&lt;p&gt;274 points points by danboarder on 2024-11-04T22:19:49 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42046596'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;&gt; This week, the U.S. Forest Service directed its employees in California to stop prescribed burning “for the foreseeable future,” a directive that officials said is meant to preserve staff and equipment to fight wildfires if needed.It sounds like it's a resourcing issue, not a change in philosophy.  It doesn't change the fact that it won't be happening though.&lt;/li&gt;&lt;li&gt;California is in the middle of a huge fire insurance crisis. It started with the intentional housing supply restrictions that drove up property prices and rents. In suburban areas, rebuilding costs were mostly increased indirectly through higher wages (as tradespeople and laborers have to make rent.) This sent insurance rates through the roof and caused a wave of policy cancellations. Many insurance companies exited the market altogether [1].Climate change is also to blame. The firestorms of 2017, 2018 and 2020 broke all records, and were insanely expensive to rebuild after. The typical trigger is a katabatic wind event [2] after a long dry spell. This massively reduces relative humidity (often to 5-10%,) making ignition much easier. Once a fire starts, the wind spreads it extremely quickly. Sustained wind speeds of 50-60mph are not uncommon near mountain peaks.In 2017/2018/2020, the precipitating events were so intense that the initial responses focused exclusively on helping the residents out. By the time the actual firefighting began, the fires were already enormous.It's surprising to me that we haven't seriously looked into large-scale sprinkler systems, such as this one deployed in Spain [3]. These could take a major bite out of the initial uncontrolled stage. They could either be deployed in the wild along naturally defensible lines, or at the perimeters of inhabited areas.They're expensive upfront, but not as expensive as the alternative. They might also reduce the need for prescribed burns.[1] https://www.theguardian.com/us-news/article/2024/aug/10/home...[2] https://en.wikipedia.org/wiki/Katabatic_wind[3] https://www.wired.com/story/spanish-wildfire-defenses/&lt;/li&gt;&lt;li&gt;Slight tangent, USFS has been using outdated models for their prescribed burns, and burned as late as July in my area, right at the beginning of fire season and months away from any expected precipitation. This turned into a big wildfire in my area and they spent ~$100m putting it out. You may have been able to get away with burning during the summer in the 90's here, but not anymore.I'm not opposed to prescribed burns, either, I think they are totally necessary. But do them in the fall, when you've got nothing but rain and cool temperatures for the next 6 months, instead of weeks before the hottest and driest stretch of the year.As to why they burn in early summer, they said at a community meeting it's because it requires fewer people to manage the fire.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:09:54 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42046596</guid></item><item><title>17. Top discoveries about ancient people from DNA in 2023</title><link>https://johnhawks.net/weblog/the-top-10-discoveries-about-ancient-people-from-dna-in-2023/</link><description>
&lt;![CDATA[
&lt;p&gt;89 points points by softwaredoug on 2024-11-03T16:21:03 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;This year saw a lot of research consolidation, with continued progress along well-established lines. New techniques have opened up avenues of understanding kinship from ancient populations and the links between people and artifacts. Balancing selection can be a result of overdominance, where the relative fitness of an allele declines when the allele becomes very common, or balancing selection can happen when an allele has varied fitnesses in different times and places. Many fascinating questions about ancient people involve their social dynamics and their interaction with other ancient groups.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42033913'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;&gt; [On a sense of smell:] Denisovan missense variants had a stronger response than their human orthologs, which de March and coworkers narrowed down to “odors contemporary humans perceive as spicy, balsamic, and unpleasant”. Neandertals, on the other hand, had a much lower response for the missense variants which were found in these genes.I struggle to interpret this (not least because of the mis- prefix: does this mean incorrectly sensing? Does spicy in scent mean something that would map to food spices?) But does it mean that Denisovans would have disliked things we think of as smelling bad, far more than Neanderthals would? Would a Denisovan have bathed more for personal hygiene, or have avoided spicy food, or...? Would a Denisovan today have a strong aversion to some perfumes or colognes (the ones with woody, tobacco, musk scents)?There is this vague sense of wonder that there were human populations with preferences that were _different_ to our own.&lt;/li&gt;&lt;li&gt;It’s impressive how ancient DNA maps our origins though it feels like piecing together a story with missing chapters&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:10:04 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42033913</guid></item><item><title>18. We're Leaving Kubernetes</title><link>https://www.gitpod.io/blog/we-are-leaving-kubernetes</link><description>
&lt;![CDATA[
&lt;p&gt;384 points points by filiptronicek on 2024-11-04T14:41:28 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;Kubernetes seems like the obvious choice for building out remote, standardized and automated development environments. But Gitpod has found that Kubernetes is not the right choice. This is the story of how (not) to build development environments in the cloud. The many gigabytes of source code, build caches, Docker container and test data are subject to a high change rate and costly to migrate. Unlike many production services, there’s a 1-to-1 interaction between the developer and their environment. We found that many teams underestimate the complexity of operating a CDE.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42041917'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;Personally - just let the developer own the machine they use for development.If you really need consistency for the environment - Let them own the machine, and then give them a stable base VM image, and pay for decent virtualization tooling that they run... on their own machine.I have seen several attempts to move dev environments to a remote host.  They invariably suck.Yes - that means you need to pay for decent hardware for your devs, it's usually cheaper than remote resources (for a lot of reasons).Yes - that means you need to support running your stack locally.  This is a good constraint (and a place where containers are your friend for consistency).Yes - that means you need data generation tooling to populate a local env.  This can be automated relatively well, and it's something you need with a remote env anyways.---The only real downside is data control (ie - the company has less control over how a developer manages assets like source code).  I'm my experience, the vast majority of companies should worry less about this - your value as a company isn't your source code in 99.5% of cases, it's the team that executes that source code in production.If you're in the 0.5% of other cases... you know it and you should be in an air-gapped closed room anyways (and I've worked in those too...)&lt;/li&gt;&lt;li&gt;&gt; This is not a story of whether or not to use Kubernetes for production workloads that’s a whole separate conversation. As is the topic of how to build a comprehensive soup-to-nuts developer experience for shipping applications on Kubernetes.&gt; This is the story of how (not) to build development environments in the cloud.I'd like to request that the comment thread not turn into a bunch of generic k8s complaints. This is a legitimately interesting article about complicated engineering trade-offs faced by an organization with a very unique workload. Let's talk about that instead of talking about the title!&lt;/li&gt;&lt;li&gt;  &gt;Kubernetes seems like the obvious choice for building out remote, standardized and automated development environments

- Is it really Obvious Choice™ though Fred?- Hmm, let's consult the graphs.  &gt;Kubernetes is a container orchestration system for automating software deployment.

- It's about automating deployment Carl, not development environments!  &gt;Kubernetes is not the right choice for building development environments, as we’ve found.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:10:14 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42041917</guid></item><item><title>19. Unfortunate things about performance reviews (2021)</title><link>http://rachelbythebay.com/w/2021/02/19/perf/</link><description>
&lt;![CDATA[
&lt;p&gt;205 points points by zargon on 2024-11-04T06:30:00 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42039053'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;I learned this in my very first corporate job at Factset and it made me sick of them; it's the main reason why I've worked at a bunch of startups.If the manager likes you, they will see the things you do in a positive light.If the manager doesn't like you, they will see the things you do in a negative light.So obviously, the solution is to optimize for always keeping the manager happy... except that that is a little dehumanizing.It's basically like any relationship coupled with confirmation bias. Basically, if you get onto the shit-list of your partner or friend or manager, it is difficult to get off it. People seem to automatically polarize their opinions about other people (probably due to confirmation bias) and then just apply post-hoc justification.If nothing else, I have gotten very good at noticing the change of tone when the point-of-no-return is reached (perhaps because I feel like I am terrible at avoiding it). You'll feel some queasiness/nausea after a conversation that went from friendly to critical based on something you perhaps flubbed... you'll start blaming yourself (even though you probably didn't actually have a ton of control over the outcome). Something will feel "off." Things won't feel as harmonious anymore. Details will be off- you didn't get invited to an important meeting that you are pretty sure you would have been invited to months prior. A new hire will get approved, but without anyone checking in with you first. You will feel like you are on the defensive and are working "defensively"- you're struggling to complete work or put presentations together or whatever- you're not sleeping well- those are all the feel of the ring ropes against your back, because you're actually on them, and you're in denial. It's hard not to take personally; has anyone actually ever been put on a PIP that made it back to "stellar performer", or are PIPs purely just lip-service to a CYA for the inevitable layoff?&lt;/li&gt;&lt;li&gt;&gt;&gt; If you take nothing else away from this post, take this: a sufficiently skilled manager can take the same body of work and make it work for you OR against you.This is pretty much the only thing that matters (unless you are really at one of the far extremes of the ability bell curve).&gt;&gt;About a year ago, I finally came to the conclusion that I would not put anything on a performance review writeup for a coworker that could ever be used against them.When I was a contractor, I was occasionally asked for feedback from permanent employee managers. As if I would say anything bad, even if I hated them.&lt;/li&gt;&lt;li&gt;Perf reviews are a terrible abstraction. The ranking and self-scoring and meetings and goal setting and stomach aching could be boiled down to a 5 item list:1. We want this person to leave. They probably should have been let go already.2. We wouldn't mind if this person left, but we aren't going to go out of our way until there are layoffs.3. This person provides adequate value, loyalty, and flexibility for their salary.4. This person is a key contributor and should be advanced if possible.5. We don't know why this person is still here, and we are terrified they might leave us when they realize how undercompensated they are.That's it. That's all perf reviews are for. No one needs to be stack ranked or anything silly like that. HR is an abomination.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:10:24 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42039053</guid></item><item><title>20. Designing a Home Radio Telescope for 21 Cm Emission</title><link>https://arxiv.org/abs/2411.00057</link><description>
&lt;![CDATA[
&lt;p&gt;89 points points by antognini on 2024-11-04T18:21:59 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;This study presents the methodology for creating a cost-efficient radio astronomy telescope that can be used to detect 21 cm emissions. By measuring the Doppler shifts of the 21 cm emission, the velocities of hydrogen clouds relative to Earth can be determined. This enables the identification of these clouds' movements, their positions within the galaxy's spiral arms, and their roles in the overall rotational dynamics of the Milky Way. The setup is designed to be accessible to amateurs, enabling others to conduct similar projects.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42044494'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;I had a dish set up in London, 20 years ago (before I came out to the USA). Looked like #1. The dish splits into segments, and I recall driving down the M1 from Birmingham in my battered old Ford Escort, with the (razor-sharp) mesh segments squeezed in and wobbling right next to my jugular... Those dishes were getting vanishingly hard to find in the UK, so it was worth the trip, and I kept my neck intact with only minimal damage...I had it all packed up when moving out to the US (because my imagination told me that houses in the US were far larger than in the UK). The house I ended up buying (despite having a much larger back garden) didn't have the space to set it up again and remain married, so two decades later, it's still in that wooden case... I do, however, have an optical telescope set up (#2)Back then, we didn't have easy access to SDR's, so there's a feed horn, a down-converter, and I had an external (standalone) WinRadio receiver to  actually listen to the feed. That went into an audio card on a linux box, and the waterfall display was beautiful :)#1: https://imgur.com/a/CDrEeII#2: https://imgur.com/a/askar-130phq-scope-sb-myt-mount-26mp-cam...&lt;/li&gt;&lt;li&gt;Some pics of the OG detector from the 50s https://www.radio-astronomy.org/node/368The Purcell mentioned is the same one of NMR Nobel and E&amp;M textbook fame.&lt;/li&gt;&lt;li&gt;Page three of the paper shows an enviable rooftop antenna farm. Drool.I have an ignorant question ... can home/amateur radio astronomy ever produce layperson-appreciated "imagery"? Something easily understood like optical astronomy can produce? e.g. stitching together a sky scan for a particular emission or something?&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:10:34 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42044494</guid></item><item><title>21. Limitations of frame pointer unwinding</title><link>https://developers.redhat.com/articles/2024/10/30/limitations-frame-pointer-unwinding</link><description>
&lt;![CDATA[
&lt;p&gt;117 points points by rwmj on 2024-11-04T11:25:25 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42040549'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;Didn’t really get the point of the post as it just presents something without a conclusion.9X% of users do not care about a &lt;1% drop in performance. I suspect we get the same variability just by going from one kernel version to another. The impact from all the Intel mitigations that are now enabled by default is much worse.However I do care about nice  profiles and stack traces without having to jump through hoops.Asking people to recompile an _entire_ distribution just to get sane defaults is wrong. Those who care about the last drop should build their custom systems as they see fit, and they probably already do.&lt;/li&gt;&lt;li&gt;I added support to Sysprof this weekend for unwinding using libdwfl and DWARF/CFI/eh_frame/etc techniques that Serhei did in eu-stacktrace.The overhead is about 10% of samples. But at least you can unwind on systems without frame-pointers. Personally I'll take the statistical anomalies of frame-pointers which still allow you to know what PID/TID are your cost center even if you don't get perfect unwinds. Everyone seems motivated towards SFrame going forward, which is good.https://blogs.gnome.org/chergert/2024/11/03/profiling-w-o-fr...&lt;/li&gt;&lt;li&gt;I broadly agree with the thesis of the post, which if I understand correctly is that frame pointers are a temporary compromise until the whole ecosystem gets its act together and manages to agree on some form of out-of-band tracking of frame pointers, and it seems that we'll eventually get there.Some of the statements in the post seem odd to me though.- 5% of system-wide cycles spent in function prologues/epilogues? That is wild, it can't be right.- Is using the whole 8 bytes right for the estimate? Pushing the stack pointer is the first instruction in the prologue and it's literally 1 byte. Epilogue is symmetrical.- Even if we're in the prologue, we know that we're in a leaf call, we can still resolve the instruction pointer to the function, and we can read the return address to find the parent, so what information is lost?When it comes to future alternatives, while frame pointers have their own problems, I think that there are still a few open questions:- Shadow stacks are cool but aren't they limited to a fixed number of entries? What if you have a deeper stack?- Is the memory overhead of lookup tables for very large programs acceptable?&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:10:44 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42040549</guid></item><item><title>22. Cheap Thrills, an album cover by Robert Crumb (2020)</title><link>https://musicaficionado.blog/2020/01/28/cheap-thrills-an-album-cover-by-robert-crumb/</link><description>
&lt;![CDATA[
&lt;p&gt;172 points points by stareatgoats on 2024-11-04T09:35:19 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42039935'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;Robert Crumb was interviewed for a BBC Radio 3 program where he played some records from his collection and talked about them.One song was particularly fascinating: a primitive attempt at the new fangled sound called 'jazz' by a French country musette band from the early 20th C.Crumb explained that when early American jazz bands went to Paris in the 1910s, the new sounds caused a sensation when they performed in the up-market venues. So the country bands were aware of the new style of jazz but most people had never actually heard any and had to play what they imagined jazz to be, mostly based off verbal descriptions. I remember this record as a crazy sound, but brilliantly entertaining.Unfortunately I can't point you to the song or the interview, but if anyone else can please reply :-0&lt;/li&gt;&lt;li&gt;Crumb has been living in a small village in the south of France since the 90's.In the "Crumb" doc he says something along "They're all wearing baseball hats. I'm getting out of here.", speaking about the US.He also laments having taken too much LSD.&lt;/li&gt;&lt;li&gt;The intro about him not liking the music reminded me of the Letter of Note entry when Crumb is sent an experimental jazz album and replies to the musician:https://lettersofnote.com/2015/12/17/torturing-the-saxophone...&gt; I gotta tell you, on the cover of the CD of your sax playing, which is black and has no text on it, I wrote in large block letters, in silver ink, “Torturing The saxophone—Mats Gustafsson.” I just totally fail to find anything enjoyable about this, or to see what this has to do with music as I understand it, or what in God´s name is going on in your head that you want to make such noises on a musical instrument. Quite frankly, I was kind of shocked at what a negative, unpleasant experience it was, listening to it.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:10:54 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42039935</guid></item><item><title>23. The history of Unix's ioctl and signal about window sizes</title><link>https://utcc.utoronto.ca/~cks/space/blog/unix/WindowSizeIoctlAndSignal</link><description>
&lt;![CDATA[
&lt;p&gt;109 points points by ingve on 2024-11-04T07:39:27 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;None&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42039401'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;I submitted the proposal for `tcgetwinsize` to POSIX a few years ago.  I originally wrote it because I was sick of having to turn off _POSIX_C_SOURCE for just a single file to get glibc to expose TIOCGWINSZ.SIGWINCH and the TIOCGWINSZ ioctl() were originally omitted from POSIX as they were considered relevant for windowing systems only and GUI-stuff was considered out of scope for POSIX.  Furthermore, POSIX only specifies ioctl() for STREAMS; other interfaces that traditionally use ioctl() calls are specified in POSIX using wrapper functions (which is what the new interface is; it is specified such that you can implement it just by wrapping the traditional TIOCGWINSZ/TIOCSWINSZ ioctl calls).My original proposal had functions tcgetsize() and tcsetsize(), but it turns out that QNX already uses these identifiers with an incompatible signature, so a last minute change was made to name these tcgetwinsize() and tcsetwinsize().Furthermore, the winsize structure traditionally also has ws_xpixel and ws_ypixel members indicating the resolution of the terminal.  This existed primarily becaus on some historical virtual terminals, a client could change the video mode by calling the TIOCSWINSZ ioctl, providing resolution and row/column count for the desired video mode.  While no current virtual terminal known to me supports this, the POSIX spec mandates that if a slave PTY calls tcsetwinsize(), the window size update is propagated to the master, allowing terminal emulators to implement this feature if desired.  Another objection raised was that the traditional unsigned short type may be insufficient for future high-definition screens and a resolution may not be well defined for some types of terminals like hardcopy or braille terminals.I maintain that submitting a feature to POSIX and waiting for a new version of the standard to be released is probably the easiest way to get glibc to implement a feature you want.&lt;/li&gt;&lt;li&gt;For anybody wondering "why couldn't they just...", there is a lot of complexity in TTYs and PTYs. The kernel is even involved in line discipline and job control. Those Ctrl+Z or Ctrl+C keys you press? The kernel gets involved.It may seem strange that there's a process signal for window-size changes, but that's what was needed back in 1985. There's a similar dance with the Amiga's console.device, but both Unix and Amiga TTYs are better than Windows' terminals where there was no such thing as a PTY until Windows 10, you had to make direct API calls, and even now it's still pretty slow: https://devblogs.microsoft.com/commandline/windows-command-l...This page is a great overview pf the Unix TTY/PTY subsystem: https://www.linusakesson.net/programming/tty/&lt;/li&gt;&lt;li&gt;Terminals, ttys, etc. have some of the most arcane and outdated APIs I am aware of. It's like a window back into the 1970s&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:11:04 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42039401</guid></item><item><title>24. Show HN: Convert any website into a React component</title><link>https://chromewebstore.google.com/detail/html-to-react-figma-by-ma/chgehghmhgihgmpmdjpolhkcnhkokdfp</link><description>
&lt;![CDATA[
&lt;p&gt;214 points points by alexdanilowicz on 2024-11-04T17:03:00 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42043552'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;Your actual product is really slick.  Even just with some basic tests I can see that it produces designs with a much higher degree of polish than regular LLM models, and with much more of a design bent.  I'll definitely use this for some prototyping this week!I wonder what changes you've made from standard LLMS to get here?  I could imagine trying to put things on guard rails, giving it some components to build off, or just fine tuning based on a really nice corpus of good websites (maybe generated with this tool).&lt;/li&gt;&lt;li&gt;This is a very useful browser extension. Really love the fact that you are even able to convert the styles to TailwindCSS. Very clever.&lt;/li&gt;&lt;li&gt;I am going to be that person, but how is the copyright for the output of tools like this? Since not all websites include license on their site, yet their looks are replicated, this might be even less clear than with LLMs in general.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:11:14 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42043552</guid></item><item><title>25. DataChain: DBT for Unstructured Data</title><link>https://github.com/iterative/datachain</link><description>
&lt;![CDATA[
&lt;p&gt;121 points points by shcheklein on 2024-11-04T17:34:57 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42043948'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;Yay! Excited to see DataChain on the front page :)Maintainer and author here. Happy to answer any questions.We built DataChain because our DVC couldn't fully handle data transformations and versioning directly in S3/GCS/Azure without data copying.Analogy with "DBT for unstractured data" applies very well to DataChain since it transforms data (using Python, not SQL) inside in storages (S3, not DB). Happy to talk more!&lt;/li&gt;&lt;li&gt;Cool!  Does this assume the unstructured data already has a corresponding metadata file?My most common use cases involve getting PDFs or HTML files and I have to parse the metadata to store along with the embedding.Would I have to run a process to extract file metadata into JSONs for every embedding/chunk? Would keys created based off document be title+chunk_no?Very interested in this because documents from clients are subject to random changes and I don’t have very robust systems in place.&lt;/li&gt;&lt;li&gt;It took me a minute to grok what this was for, but I think I like itIt doesn't really replace any of the tooling we use to wrangle data at scale (like prefect or dagster or temporal) but as a local library it seems to be excellent, I think what confused me most was the comparison to dbt.I like the from_* utils and the magic of the Column class operator overloading and how chains can be used as datasets. Love how easy checkpointing is too. Will give it a go&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:11:24 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42043948</guid></item><item><title>26. Interview gone wrong</title><link>https://www.ashu1461.com/interview-gone-wrong/</link><description>
&lt;![CDATA[
&lt;p&gt;135 points points by ashu1461 on 2024-11-01T18:32:28 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42020103'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;If you know nothing about Python or coding, and you see a=b=c, you'd think that's true when all three a,b,c are the same. Python does that beautifully here, and that's the intent. It's not Python that's confusing, it's your previous experience with other languages that's confusing you.&lt;/li&gt;&lt;li&gt;I know the point of the piece is the python syntax here, but I got stuck on: "judge things like code quality / speed / conciseness etc."Do people generally write concise code on right off the bat when confronted with a new problem? I've always taken the same approach I would with writing: get something that works; refactor for concision. Maybe everyone else is playing 3D chess and I'm still on Chutes and Ladders?&lt;/li&gt;&lt;li&gt;I'm confused about this blog post. Python is mostly C inspired but actually more pseudocode inspired (which helps its popularity) which is why chained expressions exist.Also, why would you conduct an interview in a language where even if you don't know the syntax (and this is obscure) you could have looked it up or disallowed the interview to be done in Python? I think the due diligence with this issue is more to the interviewer than Python.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:11:34 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42020103</guid></item><item><title>27. Back to the future: Writing 6502 assembler with Amazon Q Developer</title><link>https://community.aws/content/2oEqDGCIsQwoPrL3wjoSReyHnan/back-to-the-future-writing-6502-assembler-with-amazon-q-developer</link><description>
&lt;![CDATA[
&lt;p&gt;69 points points by ingve on 2024-11-04T17:02:38 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;In this short post I have some fun with Amazon Q Developer and get it to write code that runs on my virtual Commodore 64. Here is the code it produced. It runs.....well almost. I see a square sprite move smoothly across the screen and when it gets to the end it crashes with the following error:Illegal quantity error in 200I turn to Amazon Q to help me fix this issue, asking it to resolve this error. It quickly provides me with updated code and an explanation of why I got the error. This correction ensures that the high bit of the sprite's X coordinate is set correctly when the sprite moves beyond the 255th pixel, allowing it to move across the entire width of the screen. After looking at some Redit groups, it is clear that the way to use the 6502 assembler tool is the way forward.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42043549'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;This raises the question: what information did Amazon Q ingest to be able to write C64 Basic, and from where – OCR'd books and magazine off Google Books? Online tutorials? That would explain whether it would be possible to adapt this workflow to supporting other relatively obscure platforms, with a limited documentation set that's certainly not available online on the internet in easily parsable HTML: e.g. PDP-11 assembly, Turbo Pascal, classic Macintosh/Macintosh Toolbox, etc.Who knows, it might be a shot in the arm for retrocomputing enthusiasts.&lt;/li&gt;&lt;li&gt;  // Zero page variables
  .const zp_x = $FB
  .const zp_y = $FE
  .const zp_dx = $101
  .const zp_dy = $104

AI extended zero page, I see… (zp_dx and zp_dy are in 6502 hardcoded stack range, not in zero page at all).&lt;/li&gt;&lt;li&gt;Author of the post here. Just reading the comments so apologies for getting some of the terminology wrong. The intention was never to mislead folk , just wanted to share my enthusiasm for emulation and the fact that you could get working code.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:11:44 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42043549</guid></item><item><title>28. Data Commons</title><link>https://datacommons.org/</link><description>
&lt;![CDATA[
&lt;p&gt;49 points points by zerojames on 2024-10-31T11:18:49 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42005646'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;Used as grounding by Google's DataGemma model https://blog.google/technology/ai/google-datagemma-ai-llm/&lt;/li&gt;&lt;li&gt;How is this built? What'd be the approach if I'd like to achieve similar results against proprietary data.References article speak of RAG and RIG - but I wonder if they factor into fine-tuning the models. AFAIK, RAG doesn't play nicely with structured data.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:11:54 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42005646</guid></item><item><title>29. It's called a dance floor</title><link>https://www.seekhifi.com/its-called-a-dance-floor/</link><description>
&lt;![CDATA[
&lt;p&gt;131 points points by wmeredith on 2024-11-04T16:04:07 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;Vogue is an RIAA-certified triple-platinum hit, selling over six million copies since its 1991 release on the "I'm Breathless" album by pop mega-star Madonna. Vogue topped charts in Australia, Canada, Japan, the United Kingdom, and the United States. It has been sampled by Kylie Minogue, Beyoncé, and Ariana Grande. The track starts with a startling, sweeping vocal line, "What are you looking at?" that pans around our heads like Michael Bay's camera.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42042810'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;QSound was magic at the time. We had a DSP class in my EE degree where we implemented a very minor transform that would shift position of audio and it was wild.It's impossible to get 3D audio to be absolutely as flawless as the real world because human ears all vary slightly and your 3D spacial perception of sound is literally tuned on your own ears, but QSound's transfer functions come as close as you can get.The algorithm also falls apart a bit outside of the sweet spot, and is really only useful in headphones and specific cases where a human is known to be placed in a certain location relative to speakers.The original model was developed using a simulated human head and lots of hand-tuning. I am curious if we've advanced far enough with tech that a more modern set of transfer function parameters could be developed.Nothing beats N speakers for positional audio, but this is a pretty decent replacement if the conditions are ideal.OpenAL was designed as an open-source library to bring 3D audio to the masses in the same way that OpenGL did (basically exposing QSound/equivalent hardware on sound cards to an API), but I'm not sure what happened to it [1].[1] https://www.openal.org/documentation/openal-1.1-specificatio...&lt;/li&gt;&lt;li&gt;If you like this kind of stereophonic sound, I recommend Art of Noise. Here are some songs from them:Moments in Love: https://www.youtube.com/watch?v=uNkcZ8QoNuIParanoimia: https://www.youtube.com/watch?v=5F8BD6gNOagDragnet '88: https://www.youtube.com/watch?v=f6JQO0KnUZYI recommend to set the videos to the highest quality and to listen using headphones&lt;/li&gt;&lt;li&gt;I remember being shown Virtual Barbershop on 2000s YouTube as a teenager. I was absolutely blown away by the experience, it did for my ears like what 2024 VR does for my eyes. Total magic.https://www.qsound.com/demos/virtualbarbershop_long.htmVery cool to see it’s from the same company!&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:12:04 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42042810</guid></item><item><title>30. HardenedBSD Feature Comparison with OpenBSD, FreeBSD, NetBSD</title><link>https://hardenedbsd.org/content/easy-feature-comparison</link><description>
&lt;![CDATA[
&lt;p&gt;97 points points by transpute on 2024-11-03T22:35:16 &lt;/p&gt;
&lt;h2&gt;Article Summary&lt;/h2&gt;
&lt;p&gt;This page includes a summary of HardenedBSD's features. Use this summary to help you with reading comprehension and vocabulary. At the bottom of the page, please share your feedback about the features you have seen on this page and the other Hardened FreeBSD features. The Hardened BSD Wiki is a free, open-source, community-driven software project that aims to improve the performance of BSD systems. For a more detailed and up-to-date guide to Hardened. BSD features, please visit our wiki.&lt;/p&gt;
            &lt;h2&gt;Top Comments&lt;/h2&gt;&lt;a href='https://news.ycombinator.com/item?id=42036652'&gt;Comment Link&lt;/a&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;It's easy to invent a chart that only you can get a nearly perfect score on.This does nothing to explain what any of these features are, what are "Boot hardening" and "sysctl hardening"?At least OpenBSD's innovations page makes an attempt to explain new concepts and features that have been developed over the years, and people can make any comparisons for themselves.https://www.openbsd.org/innovations.html&lt;/li&gt;&lt;li&gt;Read these claims with a pretty big asterisk.  Implementation quality of HBSD features is often poor or very poor.  https://www.fabiankeil.de/gehacktes/hardenedbsd/ is just one example.  Specifically some of the changes made to "harden" the system are pretty dubious and introduce new bugs, possibly security relevant, that did not previously exist.  No one runs or pen tests HBSD.  It's even more niche than OpenBSD.&lt;/li&gt;&lt;li&gt;&gt; Executable file integrity enforcementI assume but don't know for sure that this refers to Veriexec in NetBSD, and I'm not sure what in HardenedBSD. Anyone know?https://man.netbsd.org/veriexec.8My understanding is that Veriexec isn't enabled by default - the manpage says only that "[s]ome kernels already enable Veriexec by default." If you have this enabled, how do you upgrade binaries? The manpage says that in strict mode 1, write access to monitored binaries is allowed but then access is denied. So I assume that after file modification, root then runs veriexecgen and veriexecctl load as mentioned in the manual to update the signatures list. So it seems that strict level 1 isn't functionally different from a read-only /usr or even just root-owned binaries. In either case, you just need root to update targeted binaries. Surely I'm missing something and would appreciate some insight.At a glance as an outsider, stricter modes appear somewhat functionally similar to "chflags schg" on BSD systems, where more work is needed to get around restrictions. In the case of schg, you have to reboot into single user mode, remove the schg flag, then modify the binary, and continue booting into multi-user mode. You could do this as a remote attacker (as in not having console access) depending on what boot files are or aren't protected with schg, but modifying all the necessary files can be a source of new problems.&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;]]]]</description><pubDate>Tue, 05 Nov 2024 06:12:14 -0000</pubDate><guid isPermaLink="false">https://news.ycombinator.com/item?id=42036652</guid></item></channel></rss>